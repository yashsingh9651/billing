// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User/Account model
model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          UserRole  @default(ADMIN)
  businessName  String
  businessAddress String
  businessGST   String?
  businessContact String
  bankDetails   String
  invoices      Invoice[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Product model
model Product {
  id                String          @id @default(cuid())
  name              String
  quantity          Float
  buyingPrice       Float
  sellingPrice      Float
  wholesalePrice    Float
  discountPercentage Float           @default(0)
  mrp               Float
  unit              String          // piece, kg, dozen, etc.
  barcode           String?
  supplier          String?
  taxRate           Float           @default(0)
  description       String?
  isActive          Boolean         @default(true)
  invoiceItems      InvoiceItem[]
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

// Invoice model
model Invoice {
  id                String        @id @default(cuid())
  invoiceNumber     String        @unique
  date              DateTime      @default(now())
  type              InvoiceType
  
  // Sender info (only required for BUYING type)
  senderName        String
  senderAddress     String
  senderGST         String?
  senderContact     String
  
  // Receiver info (only required for SELLING type)
  receiverName      String
  receiverAddress   String
  receiverGST       String?
  receiverContact   String
  
  // Items and totals
  items             InvoiceItem[]
  subtotal          Float
  cgstRate          Float    @default(0)
  sgstRate          Float    @default(0)
  igstRate          Float    @default(0)
  
  // Status and metadata
  status            InvoiceStatus @default(DRAFT)
  notes             String?
  
  // Relations
  userId            String
  user              User          @relation(fields: [userId], references: [id])
  
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
}

// Invoice Item model
model InvoiceItem {
  id                String    @id @default(cuid())
  serialNumber      Int
  productName       String
  quantity          Float
  rate              Float
  discount          Float     @default(0)
  amount            Float
  
  // Relations
  invoiceId         String
  invoice           Invoice   @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  productId         String
  product           Product   @relation(fields: [productId], references: [id])
  
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@unique([invoiceId, serialNumber])
}

// Enums
enum InvoiceType {
  BUYING
  SELLING
}

enum InvoiceStatus {
  DRAFT
  FINALIZED
  PAID
  CANCELLED
}

enum UserRole {
  SUPERADMIN
  ADMIN
}
